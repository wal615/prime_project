sir_dr$evalues))
}
setwd("~/dev/projects/inverse_regression/R_code/")
root_path <- "../sim_data/"
####################################################################
source("SIR_blocks_helpers.R")
source("SIR_rows_helpers.R")
source("simulation_generation.R")
library(dr)
#####################################################################
slice_number <- 8
block <- 5
result_list <- list()
for (prefix in sliced_data_name[[1]]) {
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list <- append(result_list, data.frame(sir_row$eigenvalues,
sir_block$eigenvalues,
sir_dr$evalues))
}
result_list
length(result_list)
sliced_data_name
sir_dr$evectors
sir_block$v_eigenvectors_scale
sir_row$v_eigenvectors_scale
for (prefix in sliced_data_name[[1]]) {
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list <- append(result_list, list(sir_block$eigenvalues, sir_row$eigenvalues, sir_dr$evalues))
}
result_list
i = 1
length(sliced_data_name[[1]]
)
prefix <- sliced_data_name[[1]][i]
prefix
for (i in length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[i] <- list(sir_block$eigenvalues, sir_row$eigenvalues, sir_dr$evalues)
}
for (i in length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(sir_block$eigenvalues, sir_row$eigenvalues, sir_dr$evalues)
}
result_list
result_list <- list()
for (i in length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(sir_block$eigenvalues, sir_row$eigenvalues, sir_dr$evalues)
}
result_list
for (i in 1:length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(sir_block$eigenvalues, sir_row$eigenvalues, sir_dr$evalues)
}
result_list
for (i in 1:length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
sum_x_x_t
suff_stat
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
result_list
result_list
result_list <- list()
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
prefix <- sliced_data_name[[2]][i]
sliced_data_name[[2]]
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
inputfile
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
header
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
sir_block
sir_row
sir_dr$slice.info$nslices
sir_dr$slice.info$slice.sizes
source("SIR_blocks_helpers.R")
source("SIR_rows_helpers.R")
source("simulation_generation.R")
library(dr)
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
ls()
tem_table
sum_h <- tem_table[, lapply(.SD, sum), keyby = slice][, slice:=NULL] %>% data.matrix(.)
sum_h
slice
tem_table[, lapply(.SD, sum), keyby = slice]
match(slice, slice_level)
match(slice, slice_levels)
slice_level
slice_levels %in% unique(slice)
mathch(slice_levels, unique(slice))
match(slice_levels, unique(slice))
slice_levels %in% unique(slice)
slice_levels %in% unique(slice) %>% subset(slice_levels, .)
slice_levels %in% unique(slice) %>% subset(slice_levels, !.)
!(slice_levels %in% unique(slice)) %>% subset(slice_levels, .)
!(slice_levels %in% unique(slice))
!(slice_levels %in% unique(slice)) %>% slice_levels[.]
!(slice_levels %in% unique(slice)) %>% slice_levels
missing_slice <- subset(slice_levels, slice_levels %in% unique(slice))
missing_slice
missing_slice <- subset(slice_levels, !(slice_levels %in% unique(slice)))
missing_slice
test <- subset(slice_levels, !(slice_levels %in% slice_levels))
test
if (test) print("Hi")
is.null(test)
tem_table(slice = missing_slice)
tem_table <- data.table::data.table(x, slice)
tem_table(slice = missing_slice)
class(x)
dim(x)
append(slice,c("z","v"))
slice
block_data <- read.table(f, header = FALSE, col.names = header, sep = ",", stringsAsFactors = FALSE)
x_location <- grep("x", header)
slice_location <- grep("slice", header)
x <- block_data[,x_location] %>% data.matrix(.)
slice <- block_data[,slice_location]
slice <- block_data[,slice_location]
slice
append(slice,c("z","v"))
length(missing_slice)>0
slice
slice <- append(slice, missing_slice)
slice
x <- matrix(0, nrow = length(missing_slice), ncol = ncol(x)) %>%
rbind(x, .)
x
tem_table <- data.table::data.table(x, slice)
sum_h <- tem_table[, lapply(.SD, sum), keyby = slice]
sum_h
source("SIR_blocks_helpers.R")
source("SIR_rows_helpers.R")
source("simulation_generation.R")
library(dr)
slice_number <- 8
block <- 5
result_list <- list()
for (i in 1:length(sliced_data_name[[1]])) {
prefix <- sliced_data_name[[1]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 6, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
source("SIR_blocks_helpers.R")
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_level = 8, header = header)
## rows
slice_level <- letters[1:slice_number]
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_level)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
sum_h
unique(slice)
slice
slice <- block_data[,slice_location]
slice
missing_slice <- subset(slice_levels, !(slice_levels %in% unique(slice)))
0
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
sum_h
cc
result_list
result_list <- list()
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
table(slice)
source("SIR_blocks_helpers.R")
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
sum_h
total_number_slice
table(slice)
table(slice_modified) %>% as.numeric(.)
table(slice_modified)
t <- table(slice_modified)
t["d"]
t["d"] <- 0
t
missing_slice
table(slice)[missing_slice] <- 0
table(slice)
table(slice)["a"]
table(slice)["a"] <- 0
source("SIR_blocks_helpers.R")
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
source("SIR_blocks_helpers.R")
for (i in 1:length(sliced_data_name[[2]])) {
prefix <- sliced_data_name[[2]][i]
slice_level <- letters[1:slice_number]
## block
inputfile <- generate_file_list(prefix = paste0(prefix, "_sim_block"),
suffix = formatC(1:block,flag=0,width=2),
sep = "_", location = root_path
)
header <- read_header(input_file = paste0(root_path, "mega_", prefix))
sir_block <- SIR_blocks(input_file = inputfile, slice_levels, header = header)
## rows
inputfile <- paste0(root_path, prefix, ".csv")
sir_row <- SIR_rows(inputfile, ncol = 4, slice_levels)
## dir
input_data <- read.csv(inputfile)
sir_dr <- dr(y ~., data = input_data[, -ncol(input_data)], method = "sir", nslice = slice_number)
result_list[[i]] <- list(block = sir_block$eigenvalues, row = sir_row$eigenvalues, dr = sir_dr$evalues)
}
result_list
summary(s1 <- dr(LBM~log(SSF)+log(Wt)+log(Hg)+log(Ht)+log(WCC)+log(RCC)+log(Hc)+log(Ferr),
data=ais,method="sir",slice.function=dr.slices.arc,nslices=8))
dr.coordinate.test(s1,~.-log(Hg))
dr.coordinate.test
getMethod("dr.coordinate.test")
